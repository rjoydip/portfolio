---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	const numOfPost = posts.length;

	return posts
		.sort(
			(a: any, b: any) =>
				new Date(b.data.pubDate).getTime() -
				new Date(a.data.pubDate).getTime(),
		)
		.map((post: any, i: number) => ({
			params: { slug: post.slug },
			props: {
				post,
				prevPost: i + 1 === numOfPost ? null : posts[i + 1],
				nextPost: i === 0 ? null : posts[i - 1],
			},
		}));
}
type Props = CollectionEntry<"blog">;

// @ts-ignore
const { post, prevPost, nextPost } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();
---

<BlogPost {...post.data} headings={headings} minutesRead={remarkPluginFrontmatter.minutesRead}>
	<Content />

	<div class="grid gap-2">
		<div class="navigation grid grid-cols-1 lg:grid-cols-2 gap-2">
			{
				prevPost && (
					<a
						href={`/blog/${prevPost.slug}`}
						class="bg-#30344600 decoration-none opacity-75 hover:(opacity-100 bg-#30344620) rounded-md transition-all duration-300 ease-in-out text-left flex flex-col gap-2 p-4"
					>
						<span class="inline-flex opacity50 items-center gap-2">
							<i class="i-myna-chevron-double-left" /> Previous
						</span>
						<span>{prevPost.data.title}</span>
					</a>
				)
			}
			{
				nextPost && (
					<a
						href={`/blog/${nextPost.slug}`}
						class="#303446 decoration-none opacity-75 hover:(opacity-100 bg-#30344620) rounded-md transition-all duration-300 ease-in-out flex flex-col gap-2 p-4 text-left lg:text-right"
					>
						<span class="inline-flex opacity50 items-center lg:justify-end gap-2">
							Next <i class="i-myna-chevron-double-right" />
						</span>
						<span>{nextPost.data.title}</span>
					</a>
				)
			}
		</div>
	</div>
</BlogPost>
